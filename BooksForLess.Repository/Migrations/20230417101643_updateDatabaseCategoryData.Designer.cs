// <auto-generated />
using BooksForLess.Repository.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksForLess.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230417101643_updateDatabaseCategoryData")]
    partial class updateDatabaseCategoryData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksForLess.Repository.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = "1",
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = "2",
                            Name = "Philosophy"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = "3",
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("BooksForLess.Repository.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Ryan Holiday",
                            Description = "rem Ipsum has been the industry's standard dummy text ever since the 150",
                            ISBN = "F0100000",
                            ListPrice = 30.0,
                            Price = 27.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            Title = "Daily Stoic"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Echart Tolle",
                            Description = "rem Ipsum has been the industry's standard dummy text ever since the 150",
                            ISBN = "F0200000",
                            ListPrice = 35.0,
                            Price = 28.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            Title = "The Power of Now"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Maggie The Beagle",
                            Description = "rem Ipsum has been the industry's standard dummy text ever since the 150",
                            ISBN = "F0300000",
                            ListPrice = 40.0,
                            Price = 38.0,
                            Price100 = 23.0,
                            Price50 = 35.0,
                            Title = "Run"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Taylor Jewel",
                            Description = "rem Ipsum has been the industry's standard dummy text ever since the 150",
                            ISBN = "F0400000",
                            ListPrice = 56.0,
                            Price = 54.0,
                            Price100 = 50.0,
                            Price50 = 53.0,
                            Title = "Lover"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
